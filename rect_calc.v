//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// ?? ?? 29 2018 17:21:41
//
//      Input file      : 
//      Component name  : rect_calc
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------


module rect_calc(
   weight,
   a,
   b,
   c,
   d,
   result
);
   input [14:0]  weight;		//signed input
   input [19:0]  a;		//unsigned input
   input [19:0]  b;		//unsigned input
   input [19:0]  c;		//unsigned input
   input [19:0]  d;		//unsigned input
   //maximum signed multiplier output requires a bit width of (multiplier_bit_width+multplicand_bit_width)
   output [36:0] result;		//signed result
   
   
   //rect0 calc
   //weight*([r0+r3]-[r1+r2])
   
   //rect adder0 ... a+d ... result is signed to facilitate signed multiplicaiton
   //rect adder1 ... b+c ... result is signed to facilitate signed multiplicaiton
   //rect adder2(subtractor) ... adder0_result-adder1_result ... always a positive number since (r0+r3)>(r1+r2) always ... result is signed to facilitate signed multiplicaiton
   //rect multiplier (SLL) ... weight determines a scalar and a sign ... result is a signed
   
   wire [20:0]   result_add0;		// MSbit is carry from add0
   wire [20:0]   result_add1;		// MSbit is carry from add1
   wire [20:0]   result_sub0;
   wire [21:0]   result_sub0_extend;
   
   assign result_add0 = (({1'b0, a}) + ({1'b0, d}));
   
   assign result_add1 = (({1'b0, b}) + ({1'b0, c}));
   
   assign result_sub0 = (result_add0 - result_add1);
   
   // must extend the unsigned sub0 result to a signed result
   assign result_sub0_extend[21] = 1'b0;		// MSbit is always positive
   assign result_sub0_extend[20:0] = result_sub0;
   
   assign result = result_sub0_extend*weight;
   
endmodule
