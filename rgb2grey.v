//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// ?? ?? 29 2018 17:22:26
//
//      Input file      : 
//      Component name  : rgb2grey
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------


module RGB2GREY(
   Din,
   Dout
);
   input [11:0] Din;		// 12bit color
   output [7:0] Dout;		// 8bit greyscale
   // [1] states that the luminace component of YUV can be calculated as:
   //     Y' = 0.299*R' + 0.587*G' + 0.114*B'
   // [2]为使色差信号的动态范围控制在-0.5~+0.5之间，要对色差信号进行归一化处理，得到UV的计算公式：
   //	  U'＝-0.1684R-0.3316G+0.5B 
   //	  V'＝0.5R-0.4187G-0.0813B 		由上式得到的UV范围在-128~+127之间，为避免负数，应在U、V之后各加128。
   // This luminace can be utilized to represent greyscale
   // [3] utilized a simple method of implementing this equaiton for VHDL RGB to greyscale conversion.
   // They simply round the coefficients to numbers that can faciliate easy bit shifting (i.e.):
   //     Greyscale = 0.25*R + 0.5*G + 0.125*B
   
   // This is equivalent to:
   // X = R/4 = R >> 2
   // Y = G/2 = G >> 1
   // Z = B/8 = B >> 3
   // Greyscale = X + Y + Z
   
   // Our implementation uses RGB444 which consists of RRRR:GGGG:BBBB（RGB4:4:4采样是目前高级的视频信号采样率，代表了高端质量保持的方法。RGB4:4:4信号需要两个SDI BNC接口来输入和输出，即通常讲的“双连接”）
   
   wire [3:0]   R;
   wire [3:0]   G;
   wire [3:0]   B;
   wire [7:0]   X;
   wire [7:0]   Y;
   wire [7:0]   Z;
   wire [7:0]   Q;
   
   // VERSION1
   // RRRR0000 >> 2 = 11110000 >> 2 = 00111100 = 60 (dec)
   // GGGG0000 >> 1 = 11110000 >> 1 = 01111000 = 120 (dec)
   // BBBB0000 >> 3 = 11110000 >> 3 = 00011110 = 30 (dec)
   // 00111100 + 01111000 + 000111110 = 11010010 = 210 (dec) max
   
   // VERSION2
   // R(3 downto 0) & R(3 downto 0) >> 2 = "00" & R & R(3 downto 2) = 00111111 = 63 (dec)
   // G(3 downto 0) & G(3 downto 0) >> 1 = '0' & G & G(3 downto 1) = 01111111 = 127 (dec)
   // B(3 downto 0) & B(3 downto 0) >> 3 = "000" & B & B(3) = 00011111 = 31 (dec)
   // GREYSCALE = R>>2 + G>>1 + B>>3 = 221 (dec) max .. more greyscale contrast ... VERY IMPORTANT!!! ...
   // ... tests with version1 did not detect faces unless area around face was black and face was the only lit up item in frame 
   
   
// Split RRRR:GGGG:BBBB
   assign R = Din[11:8];
   assign G = Din[7:4];
   assign B = Din[3:0];
   
   // R >> 2
   assign X = {2'b00, R, R[3:2]};
   
   // G >> 1
   assign Y = {1'b0, G, G[3:1]};
   
   // B >> 8
   assign Z = {3'b000, B, B[3]};
   
   // R>>2 + G>>1 + B>>3
   assign Dout = (X + Y + Z);
   
endmodule

