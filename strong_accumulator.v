//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// ?? ?? 29 2018 17:22:33
//
//      Input file      : 
//      Component name  : strong_accumulator
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------


module strong_accumulator(
   reset,
   en,
   clk,
   din,
   dout
);
   input         reset;		// async reset
   input         en;
   input         clk;		// 
   input [13:0]  din;		// 14bit signed
   output [21:0] dout;		// 22bit signed
   
   
   wire [21:0]   din_extend;		// 22bit signed
   reg [21:0]    dout_reg;		// 22bit signed
   wire [21:0]   result_adder0;		// 22bit signed
   
   //---------- sign extener -------------
   //extend: process (din(13)) -- sign extend based on MSbit of din .. din(13)
   //begin
   //	if (din(13)='1') then
   //		din_extend(21 downto 14) <= (others=>'1');
   //	else
   //		din_extend(21 downto 14) <= (others=>'0');
   //	end if;
   //end process;
   //din_extend(13 downto 0) <= din;
   
   //-------- signed 22bit adder -------
   
   assign result_adder0 = (signed_xhdl0(din) + signed_xhdl0(dout_reg));
   
   //-------- register accumulator -----
   
   
   always @(clk or reset or result_adder0 or en)
   begin: accum
      if (reset == 1'b1)
         dout_reg <= {22{1'b0}};
      else if (en == 1'b1)
         dout_reg <= result_adder0;
   end
   
   assign dout = dout_reg;
   
endmodule
